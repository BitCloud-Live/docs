[
{
	"uri": "/quickstart/",
	"title": "Quickstart",
	"tags": [],
	"description": "",
	"content": " uv-cli UVCloud cli\nHow to build using make $ make clean $ make -B build  Prebuilt binaries Common platform binaries are published on the releases page. this includes linux, osx, windows and even arm binary for arm linux platforms such as raspbian.\nQuick installation OSX $ wget https://github.com/uvcloud/uv-cli/releases/download/V2.1.0/uv-V2.1.0-darwin-amd64 -O /usr/local/bin/uv  Linux $ sudo wget https://github.com/uvcloud/uv-cli/releases/download/V2.1.0/uv-V2.1.0-linux-amd64 -O /usr/local/bin/uv $ sudo chmod +x /usr/local/bin/uv  Windows Just grap the latest executive file in release page and run it from cmd.\nSee Releases.\nQuickstart  See Documentations for more details.\nGitlab integration Test, build \u0026amp; deploy can be automated using gitlab ci.\nAn example of .gitlab-ci.yaml configuration file is as follow:\n# This file is a template, and might need editing before it works on your project. # Official docker image. image: docker:latest services: - docker:dind stages: - test - build - deploy variables: LINK: controller.uvcloud.ir:8443 #Configure this variable in Secure Variables: UVCLOUD_USER: \u0026lt;username\u0026gt; # UVCLOUD_PASSWORD: ----\u0026gt; It's more secure to be setted from settings -\u0026gt; ci/cd -\u0026gt; variables. APP: rec IMAGE: \u0026quot;hub.uvcloud.ir/$UVCLOUD_USER/$APP:$CI_COMMIT_REF_NAME\u0026quot; # Test stages test1: stage: test before_script: [] script: - echo run tests test2: stage: test before_script: [] script: - echo run tests # Build stages before_script: - docker login -u \u0026quot;$UVCLOUD_USER\u0026quot; -p \u0026quot;$UVCLOUD_PASSWORD\u0026quot; hub.uvcloud.ir build-master: stage: build script: - docker build --pull -t \u0026quot;$IMAGE\u0026quot; . - docker push \u0026quot;$IMAGE\u0026quot; only: - master # use `tags` for build when ever a new tag pushed to the repository deploy: image: hub.uvcloud.ir/uvcloud/uv-cli:V2.0.0-rc7 stage: deploy before_script: - echo $UVCLOUD_PASSWORD | uv-cli login -u $UVCLOUD_USER - uv-cli app:info -n $APP script: - \u0026quot;uv-cli app:configSet -n $APP -i $IMAGE\u0026quot; - \u0026quot;uv-cli app:info -n $APP\u0026quot;  "
},
{
	"uri": "/quickstart/dom/",
	"title": "External domains",
	"tags": [],
	"description": "",
	"content": " Start using external domains See the below asciinema video for details:\n\n"
},
{
	"uri": "/quickstart/hub/",
	"title": "Using docker hub",
	"tags": [],
	"description": "",
	"content": " How to use UVCloud docker hub Open up your terminal/cmd and login into docker using your uvcloud credentials.\nSee the below asciinema video for details:\n\n"
},
{
	"uri": "/_header/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " UVCloud "
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/",
	"title": "UVCloud",
	"tags": [],
	"description": "",
	"content": " Common platform binaries are published on the releases page. this includes linux, osx, windows and even arm binary for arm linux platforms such as raspbian.\nQuick installation OSX $ wget https://github.com/uvcloud/uv-cli/releases/download/V2.1.0/uv-V2.1.0-darwin-amd64 -O /usr/local/bin/uv  Linux $ sudo wget https://github.com/uvcloud/uv-cli/releases/download/V2.1.0/uv-V2.1.0-linux-amd64 -O /usr/local/bin/uv $ sudo chmod +x /usr/local/bin/uv  Windows Just grap the latest executive file in release page and run it from cmd.\nSee Releases.\nQuickstart  See Documentations for more details.\n"
}]